/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.BanDAO;
import Controller.ChiTietHoaDonDAO;
import Controller.HoaDonDAO;
import Controller.MenuDAO;
import Controller.NhanVienDAO;
import Model.ChiTietHoaDon;
import Model.HoaDon;
import java.io.File;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Month;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tanda
 */
public class QLHoaDon extends javax.swing.JPanel {

    ArrayList<HoaDon> listHoaDon = new ArrayList<>();
    DefaultTableModel mTableHoaDon;
    ArrayList<ChiTietHoaDon> listCTHD = new ArrayList<>();
    DefaultTableModel mTableCTHD;
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
    DateTimeFormatter formatter2 = DateTimeFormatter.ofPattern("yyyyMMdd HHmmss");
    SimpleDateFormat formatter3 = new SimpleDateFormat("yyyy-MM-dd");

    /**
     * Creates new form QLHoaDon
     */
    public QLHoaDon() {
        initComponents();
        String[] heard1 = {"Mã hóa đơn", "ngày lập", "Thành tiền", "Bàn", "Nhân viên"};
        mTableHoaDon = new DefaultTableModel(null, heard1) {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false;
            }
        };
        tab_hoaDon.setModel(mTableHoaDon);
        tab_hoaDon.getColumnModel().getColumn(3).setPreferredWidth(60);
        tab_hoaDon.getColumnModel().getColumn(4).setPreferredWidth(150);
        String[] heard2 = {"Mã hóa đơn", "Tên món", "Số lượng", "Tổng giá"};
        mTableCTHD = new DefaultTableModel(null, heard2) {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false;
            }
        };
        tab_CTHD.setModel(mTableCTHD);
        tab_CTHD.getColumnModel().getColumn(0).setPreferredWidth(60);
        tab_CTHD.getColumnModel().getColumn(1).setPreferredWidth(150);
        tab_CTHD.getColumnModel().getColumn(2).setPreferredWidth(60);
        dtc_ngayBD.setDateFormatString("yyyy-MM-dd");
        dtc_ngayKT.setDateFormatString("yyyy-MM-dd");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab_hoaDon = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tab_CTHD = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        but_showThang = new javax.swing.JButton();
        but_showNgay = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cbb_thang = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        but_xoaHoaDon = new javax.swing.JButton();
        but_xuatHoaDon = new javax.swing.JButton();
        but_xoaThucDon = new javax.swing.JButton();
        but_showAll = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        dtc_ngayBD = new com.toedter.calendar.JDateChooser();
        dtc_ngayKT = new com.toedter.calendar.JDateChooser();

        setRequestFocusEnabled(false);
        setVerifyInputWhenFocusTarget(false);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        tab_hoaDon.setBackground(new java.awt.Color(204, 255, 255));
        tab_hoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tab_hoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab_hoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tab_hoaDon);

        tab_CTHD.setBackground(new java.awt.Color(204, 255, 204));
        tab_CTHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tab_CTHD);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("BẢNG DANH SÁCH THỰC ĐƠN");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("BẢNG DANH SÁCH HÓA ĐƠN");

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách hóa đơn"));

        but_showThang.setText("Show");
        but_showThang.setEnabled(false);
        but_showThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_showThangActionPerformed(evt);
            }
        });

        but_showNgay.setText("Show");
        but_showNgay.setEnabled(false);
        but_showNgay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_showNgayActionPerformed(evt);
            }
        });

        jLabel5.setText("THÁNG");

        jLabel6.setText("NGÀY BẮT ĐẦU:");

        but_xoaHoaDon.setBackground(new java.awt.Color(255, 153, 153));
        but_xoaHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Icon/Trash.png"))); // NOI18N
        but_xoaHoaDon.setText("Xóa hóa đơn");
        but_xoaHoaDon.setEnabled(false);
        but_xoaHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_xoaHoaDonActionPerformed(evt);
            }
        });

        but_xuatHoaDon.setBackground(new java.awt.Color(255, 255, 0));
        but_xuatHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Icon/List.png"))); // NOI18N
        but_xuatHoaDon.setText("Xuất hóa đơn");
        but_xuatHoaDon.setEnabled(false);
        but_xuatHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_xuatHoaDonActionPerformed(evt);
            }
        });

        but_xoaThucDon.setBackground(new java.awt.Color(255, 153, 153));
        but_xoaThucDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/Icon/Trash.png"))); // NOI18N
        but_xoaThucDon.setText("Xóa thực đơn");
        but_xoaThucDon.setEnabled(false);
        but_xoaThucDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_xoaThucDonActionPerformed(evt);
            }
        });

        but_showAll.setText("Show all");
        but_showAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_showAllActionPerformed(evt);
            }
        });

        jLabel7.setText("NGÀY KẾT THÚC:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(dtc_ngayBD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(but_showAll, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(cbb_thang, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(but_showThang))))
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(but_xoaThucDon, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(but_xuatHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(but_xoaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(but_showNgay)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(dtc_ngayKT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(but_showAll)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbb_thang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(but_showThang))
                .addGap(24, 24, 24)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dtc_ngayBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dtc_ngayKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(but_showNgay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(but_xuatHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(but_xoaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(but_xoaThucDon, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 410, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(76, 76, 76))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    void addRowTableHoaDon(ArrayList<HoaDon> list) {
        while (mTableHoaDon.getRowCount() != 0) {
            mTableHoaDon.removeRow(0);
        }
        for (HoaDon hoaDon : list) {
            Vector v = new Vector();
            v.add(hoaDon.getMAHD());
            v.add(hoaDon.getNgayLap().substring(0, 10));
            v.add(hoaDon.getThanhTien());
            v.add(BanDAO.selectTen(hoaDon.getMAB()));
            v.add(NhanVienDAO.selectTen(hoaDon.getMANV()));
            mTableHoaDon.addRow(v);
        }
    }

    void addRowTableCTHD(ArrayList<ChiTietHoaDon> list) {
        while (mTableCTHD.getRowCount() != 0) {
            mTableCTHD.removeRow(0);
        }
        for (ChiTietHoaDon cthd : listCTHD) {
            Vector v = new Vector();
            v.add(cthd.getMAHD());
            v.add(MenuDAO.selectTen(cthd.getMAMN()));
            v.add(cthd.getSoLuong());
            v.add(cthd.getTongTien());
            mTableCTHD.addRow(v);
        }
    }

    int soNgayTrongThang(int nam, int thang) {
        switch (thang) {
            case 1:
            case 3:
            case 5:
            case 7:
            case 8:
            case 10:
            case 12:
                return 31;
            case 2:
                if (nam % 4 == 0) {
                    return 29;
                } else {
                    return 28;
                }
            case 4:
            case 6:
            case 9:
            case 11:
                return 30;
        }
        return 0;
    }

    int soNgayTrongThang(String sThang) {
        int nam = Integer.valueOf(sThang.substring(0, 4));
        int thang = Integer.valueOf(sThang.substring(5));
        return soNgayTrongThang(nam, thang);
    }

    void mess(String s) {
        JOptionPane.showMessageDialog(this, s);
    }

    private void but_showAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_showAllActionPerformed
        listHoaDon.clear();
        HoaDonDAO.selectAll(listHoaDon);
        addRowTableHoaDon(listHoaDon);
        but_showThang.setEnabled(true);
        but_showNgay.setEnabled(true);
        but_xuatHoaDon.setEnabled(true);
        but_xoaHoaDon.setEnabled(true);
        but_xoaThucDon.setEnabled(true);

        String thang = listHoaDon.get(0).getNgayLap().substring(0, 7);
        LocalDate toDay = LocalDate.now();
        LocalDate date = LocalDate.parse(thang + "-01");
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM");
        while (date.isBefore(toDay)) {
            cbb_thang.addItem(thang);
            date = date.plusMonths(1);
            thang = formatter.format(date);
        }

        //cbb_thang.addItem();

    }//GEN-LAST:event_but_showAllActionPerformed

    private void tab_hoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_hoaDonMouseClicked
        int row = tab_hoaDon.getSelectedRow();
        if (row == -1) {
            return;
        }
        listCTHD.clear();
        ChiTietHoaDonDAO.selectMaHoaDon(listCTHD, tab_hoaDon.getValueAt(row, 0).toString());
        addRowTableCTHD(listCTHD);
    }//GEN-LAST:event_tab_hoaDonMouseClicked

    private void but_xoaThucDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_xoaThucDonActionPerformed
        int rowHoaDon = tab_hoaDon.getSelectedRow();
        if (rowHoaDon == -1) {
            return;
        }
        int rowCTHD = tab_CTHD.getSelectedRow();
        if (rowCTHD == -1) {
            return;
        }
        String maHD_HoaDon = tab_hoaDon.getValueAt(rowHoaDon, 0).toString();
        String maHD_CTHD = tab_CTHD.getValueAt(rowCTHD, 0).toString();
        if (!maHD_HoaDon.equals(maHD_CTHD)) {
            mess("Mã hóa đơn của 2 bảng không khớp nhau!!!");
            return;
        }
        int canhBao = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa món " + tab_CTHD.getValueAt(rowCTHD, 1) + " không ?", "Delete", JOptionPane.OK_CANCEL_OPTION);
        if (canhBao == 0) {
            double tongTien = listCTHD.get(rowCTHD).getTongTien();
            double thanhTien = listHoaDon.get(rowHoaDon).getThanhTien();
            if (ChiTietHoaDonDAO.delete(listCTHD.get(rowCTHD))) {
                mess("Xóa món " + tab_CTHD.getValueAt(rowCTHD, 1) + " thành công!!");
                listHoaDon.get(rowHoaDon).setThanhTien(thanhTien - tongTien);
                if (listHoaDon.get(rowHoaDon).getThanhTien() == 0) {
                    mTableHoaDon.removeRow(rowHoaDon);
                    listHoaDon.remove(rowHoaDon);
                    listCTHD.clear();
                    addRowTableCTHD(listCTHD);
                    mess("Vì không có thực đơn nào trong hóa đơn nên hóa đơn sẽ tự động được xóa !!!");
                } else {
                    mTableHoaDon.setValueAt(listHoaDon.get(rowHoaDon).getThanhTien(), rowHoaDon, 2);
                    listCTHD.remove(rowCTHD);
                    addRowTableCTHD(listCTHD);
                }
            } else {
                mess("Xóa món " + tab_CTHD.getValueAt(rowCTHD, 1) + " không thành công!!");
            }

        }
    }//GEN-LAST:event_but_xoaThucDonActionPerformed

    private void but_showThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_showThangActionPerformed
        listHoaDon.clear();
        String thang = cbb_thang.getSelectedItem().toString();
        int soNgay = soNgayTrongThang(thang);
        HoaDonDAO.selectThang(listHoaDon, thang, soNgay);
        addRowTableHoaDon(listHoaDon);
    }//GEN-LAST:event_but_showThangActionPerformed

    private void but_showNgayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_showNgayActionPerformed
        listHoaDon.clear();
        String thang = cbb_thang.getSelectedItem().toString();
        try {
            String ngayBD = formatter3.format(dtc_ngayBD.getDate());
            String ngayKT = formatter3.format(dtc_ngayKT.getDate());
            if (dtc_ngayBD.getDate().after(dtc_ngayKT.getDate())) {
                mess("Ngày bắt đầu không được lớn hơn ngày kết thúc!!!");
                return;
            }
            HoaDonDAO.selectNgay(listHoaDon, ngayBD, ngayKT);
            addRowTableHoaDon(listHoaDon);
        } catch (Exception e) {
            mess("Thông tin không hợp lệ!");
        }

    }//GEN-LAST:event_but_showNgayActionPerformed

    private void but_xoaHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_xoaHoaDonActionPerformed
        int rowHoaDon = tab_hoaDon.getSelectedRow();
        if (rowHoaDon == -1) {
            return;
        }
        String maHD_HoaDon = tab_hoaDon.getValueAt(rowHoaDon, 0).toString();
        int canhBao = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa " + maHD_HoaDon + " không ?", "Delete", JOptionPane.OK_CANCEL_OPTION);
        if (canhBao == 0) {
            if (HoaDonDAO.delete(maHD_HoaDon)) {
                mess("Xóa " + maHD_HoaDon + " thành công!!");
                listHoaDon.remove(rowHoaDon);
                mTableHoaDon.removeRow(rowHoaDon);
                listCTHD.clear();
                addRowTableCTHD(listCTHD);
            } else {
                mess("Xóa " + maHD_HoaDon + " không thành công!!");
            }

        }
    }//GEN-LAST:event_but_xoaHoaDonActionPerformed

    String add5space(String s) {
        int len = s.length();
        String a = s;
        for (int i = 0; i < 5 - len; i++) {
            a += " ";
        }
        return a;
    }

    String add10space(String s) {
        int len = s.length();
        String a = s;
        for (int i = 0; i < 10 - len; i++) {
            a += " ";
        }
        return a;
    }

    String add15space(String s) {
        int len = s.length();
        String a = s;
        for (int i = 0; i < 15 - len; i++) {
            a += " ";
        }
        return a;
    }

    String add20space(String s) {
        int len = s.length();
        String a = s;
        for (int i = 0; i < 20 - len; i++) {
            a += " ";
        }
        return a;
    }

    String add30space(String s) {
        int len = s.length();
        String a = s;
        for (int i = 0; i < 30 - len; i++) {
            a += " ";
        }
        return a;
    }

    String add60space(String s) {
        int len = s.length();
        String a = s;
        for (int i = 0; i < 60 - len; i++) {
            a += " ";
        }
        return a;
    }

    private void but_xuatHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_xuatHoaDonActionPerformed
        int rowHD = tab_hoaDon.getSelectedRow();
        if (rowHD == -1) {
            mess("Bạn chưa chọn hóa đơn");
            return;
        }
        int r = tab_CTHD.getRowCount();
        if (r == -1) {
            mess("Bạn chưa có chi tiết hóa đơn");
            return;
        }
        String s = "\t\t\t\t---Hóa đơn: " + listHoaDon.get(rowHD).getMAHD() + "---\n\n";
        s += "\t Ngày lập: \t" + listHoaDon.get(rowHD).getNgayLap() + "\n";
        LocalDateTime toDay = LocalDateTime.now();
        String time = toDay.format(formatter);
        String time2 = toDay.format(formatter2);
        s += "\t Ngày xuất: \t" + time + "\n";
        s += "\t Bàn: \t\t" + tab_hoaDon.getValueAt(rowHD, 3) + "\n";
        s += "\t Nhân viên: \t" + tab_hoaDon.getValueAt(rowHD, 4) + "\n\n";
        s += "STT\tTên món\t\t\tSố lượng\tGiá\t    Tổng giá\n";
        int rowCTHDcount = tab_CTHD.getRowCount();
        for (int i = 0; i < rowCTHDcount; i++) {
            String stt = add5space((i + 1) + "");
            String tenMon = add30space(tab_CTHD.getValueAt(i, 1).toString());
            String sl = add10space(listCTHD.get(i).getSoLuong() + "");
            String gia = add15space(MenuDAO.selectGia(listCTHD.get(i).getMAMN()) + "");
            String tong = listCTHD.get(i).getTongTien() + "\n";
            s += stt + tenMon + sl + gia + tong;
        }
        s += "--------------------------------------------------------------------\n";
        s += add60space("Thành tiền:") + listHoaDon.get(rowHD).getThanhTien();
        System.out.println(s);
        try {
            File fname = new File("HoaDonXuat\\" + time2 + ".txt");
            if (fname.createNewFile()) {
                mess("Xuất thành công: " + time2 + ".txt\n"
                        + "Full path: " + System.getProperty("user.dir") + "\\HoaDonXuat\\" + time2 + ".txt");
            } else {
                System.out.println("File already exists.");
            }
            PrintWriter pw = new PrintWriter(fname);
            pw.write(s);
            pw.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_but_xuatHoaDonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton but_showAll;
    private javax.swing.JButton but_showNgay;
    private javax.swing.JButton but_showThang;
    private javax.swing.JButton but_xoaHoaDon;
    private javax.swing.JButton but_xoaThucDon;
    private javax.swing.JButton but_xuatHoaDon;
    private javax.swing.JComboBox<String> cbb_thang;
    private com.toedter.calendar.JDateChooser dtc_ngayBD;
    private com.toedter.calendar.JDateChooser dtc_ngayKT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tab_CTHD;
    private javax.swing.JTable tab_hoaDon;
    // End of variables declaration//GEN-END:variables
}
